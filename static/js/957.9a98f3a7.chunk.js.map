{"version":3,"file":"static/js/957.9a98f3a7.chunk.js","mappings":"+PA6BA,EA7BkB,SAAH,GAA8B,IAAxBA,EAAgB,EAAhBA,iBACZC,EAEJD,EAFIC,YAAaC,EAEjBF,EAFiBE,MAAOC,EAExBH,EAFwBG,aAAcC,EAEtCJ,EAFsCI,SAAUC,EAEhDL,EAFgDK,OAI9CC,EADU,kCACOL,EACvB,OACC,4BACC,0BACC,gBAAKM,IAAKD,EAAME,IAAI,cAErB,4BACC,wBAAKN,KACL,wCAAgBC,EAAY,QAC5B,sCACA,uBAAIC,KACJ,oCACA,wBACCC,EAAOI,KAAI,YAAmB,IAAhBC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAClB,OACC,wBAAcA,GAALD,EAEX,WAKJ,E,SCkBA,EAxCqB,WAAO,IAAD,IAC1B,GAA0BE,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KAEhBC,EAA+B,QAAvB,EAAiB,QAAjB,GADGC,EAAAA,EAAAA,MACSC,aAAK,aAAd,EAAgBC,YAAI,QAAI,IAClCC,GAAWC,EAAAA,EAAAA,MAAXD,QAiBP,OAfAE,EAAAA,EAAAA,YAAU,WACc,aAUtB,OAVsB,oBAAvB,8GAGwBC,EAAAA,EAAAA,IAAaC,OAAOJ,IAAU,KAAD,EAA/CK,EAAQ,OACXV,EAASU,GAAU,gDAEpBC,QAAQC,IAAI,EAAD,IAAQ,QAEwB,OAFxB,UAEnBD,QAAQC,IAAI,oBAAqBF,GAAU,6EAE5C,uBAXe,WACO,wBAWvBG,EACD,GAAG,CAACR,KAEI,4BACP,SAAC,KAAO,CAACS,GAAIb,EAAS,qBACrBF,IAAS,SAAC,EAAS,CAACb,iBAAkBa,KACvC,4BACC,4BACC,mDACA,2BACC,yBAAI,SAAC,KAAO,CAACe,GAAG,OAAM,qBACtB,yBAAI,SAAC,KAAO,CAACA,GAAG,UAAS,8BAG3B,SAAC,EAAAC,SAAQ,WACR,SAAC,KAAM,WAKX,C,8LCzCAC,EAAAA,GAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAS,mCAEFC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAU,iCAAD,OAAkCC,IAAU,KAAD,EAA7D,OAARP,EAAQ,yBACPA,EAASS,KAAKC,SAAO,2CAC7B,kBAH6B,mCAKjBZ,EAAY,mCAAG,WAAMZ,GAAE,uFACXoB,EAAAA,GAAAA,IAAU,YAAD,OAAapB,EAAE,oBAAYqB,IAAU,KAAD,EAAtD,OAARP,EAAQ,yBACPA,EAASS,MAAI,2CACrB,gBAHwB,sCAKZE,EAAY,mCAAG,WAAMzB,GAAE,uFACXoB,EAAAA,GAAAA,IAAU,YAAD,OAAapB,EAAE,4BAAoBqB,IAAU,KAAD,EAA9D,OAARP,EAAQ,yBACPA,EAASS,KAAKG,MAAI,2CAC1B,gBAHwB,sCAKZC,EAAe,mCAAG,WAAM3B,GAAE,uFACdoB,EAAAA,GAAAA,IAAU,YAAD,OAAapB,EAAE,4BAAoBqB,IAAU,KAAD,EAA9D,OAARP,EAAQ,yBACPA,EAASS,KAAKC,SAAO,2CAC7B,gBAH2B,sCAKfI,EAAe,mCAAG,WAAMC,GAAK,uFACjBT,EAAAA,GAAAA,IAAU,2BAAD,OACHC,EAAM,kBAAUQ,IAC3C,KAAD,EAFa,OAARf,EAAQ,yBAGPA,EAASS,KAAKC,SAAO,2CAC7B,gBAL2B,qC","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["const MovieCard = ({ movieInformation }) => {\n\tconst { poster_path, title, vote_average, overview, genres\n\n } = movieInformation;\n\tconst baseURL = 'https://image.tmdb.org/t/p/w400';\n\tconst path = baseURL + poster_path;\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<img src={path} alt=\"poster\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<p>User Score: {vote_average} </p>\n\t\t\t\t<h2>Overview</h2>\n\t\t\t\t<p>{overview}</p>\n\t\t\t\t<h2>Genres</h2>\n\t\t\t\t<ul>\n\t\t\t\t{genres.map(({ id, name }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={id}>{name}</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t</div>\n</div>\n\t);\n}\n\nexport default MovieCard;","import { Suspense, useState, useEffect } from \"react\";\nimport { NavLink, Outlet, useParams, useLocation  } from \"react-router-dom\";\nimport MovieCard from \"components/MovieCard/MovieCard\";\nimport { getMovieById} from \"services/api\";\n\nconst MovieDetails = () => {\n\tconst [movie, setMovie] = useState();\n\tconst location = useLocation();\n\tconst backLink = location.state?.from ?? '/';\n\tconst {movieId} = useParams();\n\n\tuseEffect(() => {\n\t\tasync function getMovie() {\n\t\t\tlet response\n      try {\n        response = await  getMovieById(Number(movieId));\n\t\t\t\t\tsetMovie(response);\t\n      } catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} finally {\n\t\t\t\tconsole.log('movie information', response);\n      }\n\t\t}\n\t\tgetMovie();\n\t}, [movieId]);\n\t\n\treturn (<div>\n\t\t<NavLink to={backLink}>Go back</NavLink>\n\t\t{movie && <MovieCard movieInformation={movie}/>}\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<p>Additional information</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><NavLink to='cast'>Cast</NavLink></li>\n\t\t\t\t\t<li><NavLink to='reviews'>Reviews</NavLink></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Suspense>\n\t\t\t\t<Outlet />\n\t\t\t</Suspense>\n\t\t\t</div>\n</div>\n\t);\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst keyAPI = 'c3d65b3aa74525a580b5ea03f6c1f1d0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/3/movie/${id}?api_key=${keyAPI}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${keyAPI}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getSearchMovies = async value => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${keyAPI}&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["movieInformation","poster_path","title","vote_average","overview","genres","path","src","alt","map","id","name","useState","movie","setMovie","backLink","useLocation","state","from","movieId","useParams","useEffect","getMovieById","Number","response","console","log","getMovie","to","Suspense","axios","keyAPI","getTrendingMovies","data","results","getMovieCast","cast","getMovieReviews","getSearchMovies","value"],"sourceRoot":""}