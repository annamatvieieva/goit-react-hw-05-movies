{"version":3,"file":"static/js/908.0c577225.chunk.js","mappings":"+PAEaA,EAAW,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACzB,OACE,wBACGA,EAAKC,KAAI,YAA4C,IAAzCC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAChC,OACE,2BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAI,WAEN,uBAAIJ,KACJ,uCAAeC,EAAS,SANjBF,EASb,KAGN,ECUA,EAxBa,WACX,OAAwBM,EAAAA,EAAAA,YAAU,eAA3BR,EAAI,KAAES,EAAO,KACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WACc,aAWrB,OAXqB,oBAAtB,8GAGqBC,EAAAA,EAAAA,IAAaC,OAAOJ,IAAU,KAAD,EACtB,KADxBK,EAAQ,QACKC,QACXP,EAAQM,GACT,gDAEDE,QAAQC,IAAI,EAAD,IAAQ,sGAGtB,uBAZc,WACO,wBAYtBC,EACF,GAAG,CAACT,KAEG,yBAAMV,GAAO,SAACD,EAAQ,CAACC,KAAMA,IAlBpB,+DAmBlB,C,8LCzBAoB,EAAAA,GAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAS,mCAEFC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAU,iCAAD,OAAkCC,IAAU,KAAD,EAA7D,OAARN,EAAQ,yBACPA,EAASQ,KAAKC,SAAO,2CAC7B,kBAH6B,mCAKjBC,EAAY,mCAAG,WAAMvB,GAAE,uFACXkB,EAAAA,GAAAA,IAAU,YAAD,OAAalB,EAAE,oBAAYmB,IAAU,KAAD,EAAtD,OAARN,EAAQ,yBACPA,EAASQ,MAAI,2CACrB,gBAHwB,sCAKZV,EAAY,mCAAG,WAAMX,GAAE,uFACXkB,EAAAA,GAAAA,IAAU,YAAD,OAAalB,EAAE,4BAAoBmB,IAAU,KAAD,EAA9D,OAARN,EAAQ,yBACPA,EAASQ,KAAKvB,MAAI,2CAC1B,gBAHwB,sCAKZ0B,EAAe,mCAAG,WAAMxB,GAAE,uFACdkB,EAAAA,GAAAA,IAAU,YAAD,OAAalB,EAAE,4BAAoBmB,IAAU,KAAD,EAA9D,OAARN,EAAQ,yBACPA,EAASQ,KAAKC,SAAO,2CAC7B,gBAH2B,sCAKfG,EAAe,mCAAG,WAAMC,GAAK,uFACjBR,EAAAA,GAAAA,IAAU,2BAAD,OACHC,EAAM,kBAAUO,IAC3C,KAAD,EAFa,OAARb,EAAQ,yBAGPA,EAASQ,KAAKC,SAAO,2CAC7B,gBAL2B,qC","sources":["components/Cast/CastList/CastList.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => {\n        return (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt=\"actor\"\n            />\n            <p>{name}</p>\n            <p>Character: {character} </p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'services/api';\nimport { CastList } from './CastList/CastList';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const { movieId } = useParams();\n  const message = \"We don't have any information about the cast of this movie.\";\n\n  useEffect(() => {\n    async function getCast() {\n      let response;\n      try {\n        response = await getMovieCast(Number(movieId));\n        if (response.length !== 0) {\n          setCast(response);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return <div>{cast ? <CastList cast={cast} /> : message}</div>;\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst keyAPI = 'c3d65b3aa74525a580b5ea03f6c1f1d0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/3/movie/${id}?api_key=${keyAPI}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${keyAPI}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getSearchMovies = async value => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${keyAPI}&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["CastList","cast","map","id","name","character","profile_path","src","alt","useState","setCast","movieId","useParams","useEffect","getMovieCast","Number","response","length","console","log","getCast","axios","keyAPI","getTrendingMovies","data","results","getMovieById","getMovieReviews","getSearchMovies","value"],"sourceRoot":""}