{"version":3,"file":"static/js/711.990ec01d.chunk.js","mappings":"+PAEaA,EAAa,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC3B,OACE,wBACGA,EAAQC,KAAI,YAA8B,IAA3BC,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC1B,OACE,2BACE,sCAAcD,MACd,uBAAIC,MAFGF,EAKb,KAGN,ECcA,EAxBgB,WACd,OAA8BG,EAAAA,EAAAA,YAAU,eAAjCL,EAAO,KAAEM,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WACiB,aAWxB,OAXwB,oBAAzB,8GAGqBC,EAAAA,EAAAA,IAAgBC,OAAOJ,IAAU,KAAD,EACzB,KADxBK,EAAQ,QACKC,QACXP,EAAWM,GACZ,gDAEDE,QAAQC,IAAI,EAAD,IAAQ,sGAGtB,uBAZc,WACU,wBAYzBC,EACF,GAAG,CAACT,KAEG,yBAAMP,GAAU,SAACD,EAAU,CAACC,QAASA,IAlB5B,6CAmBlB,C,8LCzBAiB,EAAAA,GAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAS,mCAEFC,EAAiB,mCAAG,oGACRF,EAAAA,GAAAA,IAAU,iCAAD,OAAkCC,IAAU,KAAD,EAA7D,OAARN,EAAQ,yBACPA,EAASQ,KAAKC,SAAO,2CAC7B,kBAH6B,mCAKjBC,EAAY,mCAAG,WAAMpB,GAAE,uFACXe,EAAAA,GAAAA,IAAU,YAAD,OAAaf,EAAE,oBAAYgB,IAAU,KAAD,EAAtD,OAARN,EAAQ,yBACPA,EAASQ,MAAI,2CACrB,gBAHwB,sCAKZG,EAAY,mCAAG,WAAMrB,GAAE,uFACXe,EAAAA,GAAAA,IAAU,YAAD,OAAaf,EAAE,4BAAoBgB,IAAU,KAAD,EAA9D,OAARN,EAAQ,yBACPA,EAASQ,KAAKI,MAAI,2CAC1B,gBAHwB,sCAKZd,EAAe,mCAAG,WAAMR,GAAE,uFACde,EAAAA,GAAAA,IAAU,YAAD,OAAaf,EAAE,4BAAoBgB,IAAU,KAAD,EAA9D,OAARN,EAAQ,yBACPA,EAASQ,KAAKC,SAAO,2CAC7B,gBAH2B,sCAKfI,EAAe,mCAAG,WAAMC,GAAK,uFACjBT,EAAAA,GAAAA,IAAU,2BAAD,OACHC,EAAM,kBAAUQ,IAC3C,KAAD,EAFa,OAARd,EAAQ,yBAGPA,EAASQ,KAAKC,SAAO,2CAC7B,gBAL2B,qC","sources":["components/Reviews/ReviewList/ReviewList.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h3> Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'services/api';\nimport { ReviewList } from './ReviewList/ReviewList';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n  const message = \"We don't have any reviews for this movie.\";\n\n  useEffect(() => {\n    async function getReviews() {\n      let response;\n      try {\n        response = await getMovieReviews(Number(movieId));\n        if (response.length !== 0) {\n          setReviews(response);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return <div>{reviews ? <ReviewList reviews={reviews} /> : message}</div>;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst keyAPI = 'c3d65b3aa74525a580b5ea03f6c1f1d0';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/3/movie/${id}?api_key=${keyAPI}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${keyAPI}`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/3/movie/${id}/reviews?api_key=${keyAPI}`);\n  return response.data.results;\n};\n\nexport const getSearchMovies = async value => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${keyAPI}&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewList","reviews","map","id","author","content","useState","setReviews","movieId","useParams","useEffect","getMovieReviews","Number","response","length","console","log","getReviews","axios","keyAPI","getTrendingMovies","data","results","getMovieById","getMovieCast","cast","getSearchMovies","value"],"sourceRoot":""}